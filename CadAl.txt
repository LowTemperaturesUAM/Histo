procedure TTopsigma.StartClick(Sender: TObject);
var
  i,j,k,offset,DataBeforeCount : integer ;
  blqname : string ;
  index : integer ;
  f,ff,tograph,wherezero,Countlessthan : double ;
  XIni,XFin,DeltaX,MinSigma,MaxSigma: double;
  EstoyOccupied: integer;

begin //

  for i:=0 to 999 do his[i]:=0 ;
  for i:=0 to 999 do his_sigma_nr[i]:=0 ;
  for i:=0 to 999 do
        begin
        for j:=0 to 999 do his_sigma[i,j]:=0 ;
        end;
  if(PointNr.ItemIndex=2) then MAXPOINT:=1000;
  if(PointNr.ItemIndex=1) then MAXPOINT:=100;
  if(PointNr.ItemIndex=0) then MAXPOINT:=10;
  EstoyOccupied:=0;


  hisBox:=StrToFloat(MaxDistance.Text)/MAXPOINT ;
  blqname:=sourceblq.text ;

  InfoForm.Mensaje.Caption:='Loading BLQ...' ;
  InfoForm.Show ;
  InfoForm.Refresh ;
  b.SelectBlockFile(blqname) ;
  InfoForm.Close ;

      CountLessthan:=StrtoFloat(PositionZero.Text);
        DataBeforeCount:=StrtoInt(DatabeforeZero.Text);
  for k:=0 to b.Count-1 do
  begin
    currentcurve.caption:=IntToStr(k) ;
    Application.ProcessMessages ;

    // PARES
    if Even.Checked and ((2*(k div 2))=k) then
    begin

      offset:=b.GetEntryOffset(k) ;
      LoadDataSetFromBlock(blqname,offset,DS) ;

      for i:=0 to DS.nrows-1 do begin
        f:=abs(DS[1].Value[i]) ;
        if ((EstoyOccupied>0) and
         ((f>MaxSigma) or (f<MinSigma ))) then  // se sale
            begin
            XFin:=abs(DS[0].Value[i])
            DeltaX:=abs(XFin-XIni);
            index:=Round(DeltaX/hisbox) ;
            if (index>=0) and (index<MAXPOINT) then
              begin
              his[index]:=his[index]+1 ;
              end;
            EstoyOccupied:=0;
            end                      // si no sale, no hace nada
        else
         if ((f<MaxSigma) or (f>MinSigma )) then
         begin
         EstoyOccupied:=1
         XIni:=abs(DS[0].Value[i])
         end
         else EstoyOccupied:=0;
        end;

      end;

    // IMPARES
    if Odd.Checked and ((2*(k div 2))<>k) then
    begin


      offset:=b.GetEntryOffset(k) ;
      LoadDataSetFromBlock(blqname,offset,DS) ;

      for i:=0 to DS.nrows-1 do begin
        f:=abs(DS[1].Value[i]) ;
        if ((EstoyOccupied>0) and
         ((f>MaxSigma) or (f<MinSigma ))) then  // se sale
            begin
            XFin:=abs(DS[0].Value[i])
            DeltaX:=abs(XFin-XIni);
            index:=Round(DeltaX/hisbox) ;
            if (index>=0) and (index<MAXPOINT) then
              begin
              his[index]:=his[index]+1 ;
              end;
            EstoyOccupied:=0;
            end                      // si no sale, no hace nada
        else
         if ((f<MaxSigma) or (f>MinSigma )) then
         begin
         EstoyOccupied:=1
         XIni:=abs(DS[0].Value[i])
         end
         else EstoyOccupied:=0;
        end;

    end ; // FIN IMPARES

 end ;  // fin  for k:=0 to b.Count-1 do


     // todos los datos estan en memoria

  HystoGraph.Clear ;
//  HystoGraph[1].holdupdates := true;
  for i:=0 to (MAXPOINT-1) do begin
  if(HystoColumn.ItemIndex=0) then HystoGraph[1].AddPoint(i*hisbox,his[i]);
        end ;
  HystoGraph[1].PlotPoints := False;


end;
